
---[spSet_SampleRequisition] 

ALTER PROCEDURE [dbo].[spSet_SampleRequisition](
	@dsxmlu1 xml = null,
    @SaveOption Int = null,
	@SampleRequisitionMasterID int = -1,
	@RequisitionDate datetime=null,
	@SRNo varchar(100)=null,
	@MarchandiserName varchar(100)=null,
	@BuyerID int = -1,
	@BrandID int = -1,
	@MarketingID int = -1,
    @USER_BY varchar(100) = '',
    @IdentityValue Int OutPut,
    @ErrNo int output,
	@SendForApproval  bit=0,
	@Approved bit=0,
	@Reject bit=0,
	@RejectReason nvarchar(150) = ''
)
AS
Begin Transaction
        
    Declare @Insert Int = 1, @Update Int = 2, @Approve Int = 3, @Rejected Int = 4;
	Declare @GetDateTime DateTime = getdate(),@BakIdentity int=0;

    SET @IdentityValue = 0; Set @ErrNo = 0; 
	
		SELECT 
		t.value('SampleRequisitionChildsID[1]','nvarchar(200)')as SampleRequisitionChildsID,
		t.value('SampleRequisitionMasterID[1]','nvarchar(200)')as SampleRequisitionMasterID,
		t.value('ProcessDateChilds[1]','nvarchar(150)')as ProcessDateChilds,
		t.value('Fabcode[1]','nvarchar(150)')as Fabcode,
		t.value('RequisitionQty[1]','nvarchar(150)')as RequisitionQty,
		t.value('SampleTypeID[1]','nvarchar(150)')as SampleTypeID,
		t.value('Remarks[1]','nvarchar(150)')as Remarks,
		t.value('CreatedBy[1]','nvarchar(150)')as CreatedBy,
		t.value('CreatedDate[1]','nvarchar(150)')as CreatedDate

		into #TemptblSampleRequisition from
		@dsxmlu1.nodes('/dsSampleRequisition/tblSampleRequisitionChilds')as temptable(t)

	--Main Part

    IF(@SaveOption = @Insert) -- 1 
    BEGIN  
	 
        INSERT INTO SampleBayRequisitionMaster(RequisitionDate,SRNo,MarchandiserName,BuyerID,BrandID,MarketingID,SendForApproval,CreatedBy, CreatedDate) 
                                   VALUES(@RequisitionDate,@SRNo,@MarchandiserName,@BuyerID,@BrandID,@MarketingID,@SendForApproval,@USER_BY,@GetDateTime)
                
		SET @IdentityValue = @@IDENTITY

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 

		---Details
		INSERT INTO SampleBayRequisitionChilds
		      (SampleRequisitionMasterID,Fabcode,RequisitionQty,SampleTypeID,Remarks,CreatedBy,CreatedDate)
		Select @IdentityValue,Fabcode,RequisitionQty,SampleTypeID,Remarks,@USER_BY, @GetDateTime
		From #TemptblSampleRequisition
		Where SampleRequisitionChildsID = 0 

		   If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 

    END

    Else IF(@SaveOption = @Update) -- 2
    BEGIN
        Update SampleBayRequisitionMaster 
		Set	RequisitionDate = @RequisitionDate,
		SRNo=@SRNo,
		MarchandiserName=@MarchandiserName,
		BuyerID=@BuyerID,
		BrandID=@BrandID,
		MarketingID=@MarketingID,
		UpdatedBy = @USER_BY,
		UpdatedDate = @GetDateTime,
		SendForApproval=@SendForApproval
        Where SampleRequisitionMasterID = @SampleRequisitionMasterID

        Set @IdentityValue = @SampleRequisitionMasterID

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End

		--Details Update
		Update SampleBayRequisitionChilds SET DELETED=1  From SampleBayRequisitionChilds Where NOT EXISTS
		(
			Select * From #TemptblSampleRequisition id
			Where SampleBayRequisitionChilds.SampleRequisitionChildsID = id.SampleRequisitionChildsID and SampleBayRequisitionChilds.SampleRequisitionMasterID=@IdentityValue
		)  and SampleRequisitionMasterID=@IdentityValue
		If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End

	

		INSERT INTO dbo.SampleBayRequisitionChilds
		      (SampleRequisitionMasterID,Fabcode,RequisitionQty,SampleTypeID,Remarks,CreatedBy,CreatedDate)
		Select  @IdentityValue,Fabcode,RequisitionQty,SampleTypeID,Remarks,@USER_BY, @GetDateTime
		From #TemptblSampleRequisition
		Where SampleRequisitionChildsID = 0 

		   If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
		
		UPDATE dbo.SampleBayRequisitionChilds
		     SET 
			 SampleRequisitionMasterID=@IdentityValue,
			 Fabcode=T.Fabcode,
			 RequisitionQty=T.RequisitionQty,
			 SampleTypeID=T.SampleTypeID,
			 Remarks=T.Remarks,
			 UpdatedBy=@USER_BY,
			 UpdatedDate=@GetDateTime

		From SampleBayRequisitionChilds D , #TemptblSampleRequisition T
		Where D.SampleRequisitionChildsID = T.SampleRequisitionChildsID AND T.SampleRequisitionChildsID>0

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
    END  

		--IF(@SaveOption = @Approve) -- 3
		--BEGIN 
		--	Update ACC_EXPORT_DOMASTER Set 
		--	Approved = 1,	
		--	APPROVED_BY = @USER_BY,
		--	APPROVED_DATE = @GetDateTime ,
		--	AUDITBY=@USER_BY,
		--	AUDITON=@GetDateTime,
		--	COMMENTS=@COMMENTS
		--	Where TRNSID = @TRNSID

		--	Set @IdentityValue = @TRNSID
		--	SET @DoNo1=@DONO

		--	If @@Error !=0
		--	Begin
		--		Rollback Transaction
		--		Set @ErrNo = -1
		--	End 
		--END

		--IF(@SaveOption = @Rejected) -- 5
		--BEGIN 
		--	Update ACC_EXPORT_DOMASTER Set 
		--	Approved = 0,	
		--	APPROVED_BY = @USER_BY,
		--	APPROVED_DATE = @GetDateTime ,
		--	AUDITBY=@USER_BY,
		--	AUDITON=@GetDateTime,
		--	COMMENTS=@COMMENTS,
		--	IS_CANCELLED=1,
		--	Reject=1,
		--	REJECT_BY=@USER_BY,
		--	REJECT_DATE=@GetDateTime,
		--	RejectReason=@COMMENTS
		--	Where TRNSID = @TRNSID

		--	Set @IdentityValue = @TRNSID
		--	SET @DoNo1=@DONO

		--	If @@Error !=0
		--	Begin
		--		Rollback Transaction
		--		Set @ErrNo = -1
		--	End 
		--END

		drop table #TemptblSampleRequisition
Commit Transaction


















USE [PDLERP]
GO
/****** Object:  StoredProcedure [dbo].[spSet_FS_RollReceive]    Script Date: 11/14/2022 12:05:37 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 

ALTER Procedure [dbo].[spSet_FS_RollReceive](
    @SaveOption Int = -1,
	@RCVID INT = -1,
	@RCVDATE datetime = null,
	@FFTR_NO VARCHAR(100) = '',
	@SendForApproval BIT = 0,
	@APPROVED BIT = 0,
	@REJECT BIT = 0,
	@RejectReason VARCHAR(100) = '',
    @USER_BY varchar(100) = '',
    @IdentityValue Int OutPut,
    @ErrNo int output
	,@TMP_FS_ReceiveChilds AS TMP_FS_ReceiveChilds READONLY 
)
AS
Begin Transaction
    Declare @Insert Int = 1, @Update Int = 2, @Approve Int = 3, @Rejected Int = 5;
	Declare @GetDateTime DateTime = GETDATE();
    SET @IdentityValue = 0; Set @ErrNo = 0; 

    IF(@SaveOption = @Insert) -- 1
    BEGIN
		
		Declare @RCVID_Tmp Int = 0;
		Select Top 1 @RCVID_Tmp = RCVID From F_FS_FABRIC_RCV_MASTER
		Where CONVERT(date,RCVDATE) = CONVERT(date,@RCVDATE)

		If Not Exists
		(
			Select RCVID From F_FS_FABRIC_RCV_MASTER Where CONVERT(date,RCVDATE) = CONVERT(date,@RCVDATE)
		)
		Begin
			--Save
			Insert Into F_FS_FABRIC_RCV_MASTER(RCVDATE, FFTR_NO, CreatedBy, CreatedDate, SendForApproval, SendForApprovalBy, SendForApprovalDate)
			VALUES(CONVERT(date,@RCVDATE),@FFTR_NO,  @USER_BY, @GetDateTime, @SendForApproval, @USER_BY, @GetDateTime)		
			SET @IdentityValue = @@IDENTITY
			If @@Error !=0
			Begin
				Rollback Transaction
				Set @ErrNo = -1
			End
		End
		Else
		Begin
			Set @IdentityValue = @RCVID_Tmp

		End
		

        Insert Into F_FS_FABRIC_RCV_DETAILS(RCVID, FABCODE, SO_NO, PO_NO, ROLL_ID, QTY_YARDS, BALANCE_QTY,IS_QC_APPROVE,QC_APPROVE_DATE,IS_QC_REJECT,QC_REJECT_DATE,REMARKS, CreatedBy, CreatedDate)
		Select  @IdentityValue,FABCODE, SO_NO, PO_NO, ROLL_ID, QTY_YARDS, BALANCE_QTY,IS_QC_APPROVE,QC_APPROVE_DATE,IS_QC_REJECT,QC_REJECT_DATE,REMARKS , @USER_BY, @GetDateTime
		From @TMP_FS_ReceiveChilds
		Where InputFlag = 0 And CreatedBy = @USER_BY

		If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End
    END
	Else IF(@SaveOption = @Update) -- 2
    BEGIN 
        Update F_FS_FABRIC_RCV_MASTER Set 
		FFTR_NO=@FFTR_NO,
		REJECT = 0,
		UpdatedBy = @USER_BY, 
		UpdatedDate = @GetDateTime, 
		SendForApproval = @SendForApproval,
		SendForApprovalBy = @USER_BY, 	
		SendForApprovalDate = @GetDateTime  
        Where RCVID = @RCVID

        Set @IdentityValue = @RCVID
        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
		 
		Update F_FS_FABRIC_RCV_DETAILS Set IsDeleted = 1  
		Where RCVID = @RCVID And 
		RCVID Not In 
		(
			Select TRNSID
			From @TMP_FS_ReceiveChilds id 
			Where F_FS_FABRIC_RCV_DETAILS.TRNSID = id.TRNSID And id.CreatedBy = @USER_BY 
		) 
		If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End  

		Insert Into F_FS_FABRIC_RCV_DETAILS(RCVID, FABCODE, SO_NO, PO_NO, ROLL_ID, QTY_YARDS, BALANCE_QTY,IS_QC_APPROVE,QC_APPROVE_DATE,IS_QC_REJECT,QC_REJECT_DATE,REMARKS, CreatedBy, CreatedDate)
		Select  @IdentityValue, FABCODE, SO_NO, PO_NO, ROLL_ID, QTY_YARDS, BALANCE_QTY,IS_QC_APPROVE,QC_APPROVE_DATE,IS_QC_REJECT,QC_REJECT_DATE,REMARKS , @USER_BY, @GetDateTime
		From @TMP_FS_ReceiveChilds
		Where InputFlag = 0 And CreatedBy = @USER_BY

		If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End  

		Update F_FS_FABRIC_RCV_DETAILS Set 
		RCVID = t.RCVID, 
		UpdatedBy = @USER_BY,
	    UpdatedDate = @GetDateTime 
		From F_FS_FABRIC_RCV_DETAILS CHILD, @TMP_FS_ReceiveChilds t
		Where CHILD.TRNSID = t.TRNSID And t.InputFlag = 1 And t.CreatedBy = @USER_BY
		If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
    END  
	Else IF(@SaveOption = @Approve) -- 3
    BEGIN 
        Update F_FS_FABRIC_RCV_MASTER Set 
		APPROVED = 1,	
		ApprovedBy = @USER_BY,
		ApprovedDate = @GetDateTime  
        Where RCVID = @RCVID

        Set @IdentityValue = @RCVID
        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
    END 

	Else IF(@SaveOption = @Rejected) -- 4
    BEGIN 
        Update F_FS_FABRIC_RCV_MASTER Set 
		REJECT = 1,	
		RejectReason = @RejectReason,	
		RejectBy = @USER_BY,
		RejectDate = @GetDateTime  ,
		SendForApproval= 0
        Where RCVID = @RCVID

        Set @IdentityValue = @RCVID
        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
    END  
Commit Transaction



SELECT *
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = N'F_PR_FN_CHEMICAL_CONSUMPTION'












USE [PDLERP]
GO
/****** Object:  StoredProcedure [dbo].[spSet_FIN_MachinePreparation]    Script Date: 11/19/2022 6:27:20 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[spSet_FIN_MachinePreparation](
	@dsxmlu1 xml = null,
	@dsxmlu2 xml = null,
    @SaveOption Int = null,
	@MachinePreparationID int = -1,
	@MachineID int = -1,
	@Fabcode int = -1,
	@FinishTypeID int = -1,
	@MachinePreparationDate datetime=null,
	@FinishRoute varchar(256)=null,
	@Remarks varchar(100)=null,
	@MarketingID int = -1,
    @USER_BY varchar(100) = '',
    @IdentityValue Int OutPut,
    @ErrNo int output,
	@SendForApproval  bit=0,
	@Approved bit=0,
	@Reject bit=0,
	@RejectReason nvarchar(150) = ''
)
AS
Begin Transaction
        
    Declare @Insert Int = 1, @Update Int = 2, @Approve Int = 3, @Rejected Int = 4;
	Declare @GetDateTime DateTime = getdate(),@BakIdentity int=0;

    SET @IdentityValue = 0; Set @ErrNo = 0; 
	
		SELECT 
		t.value('MachineDoffID[1]','nvarchar(200)')as MachineDoffID,
		t.value('MachinePreparationID[1]','nvarchar(200)')as MachinePreparationID,
		t.value('FinishingProcessMasterID[1]','nvarchar(150)')as FinishingProcessMasterID,
		t.value('Remarks[1]','nvarchar(150)')as Remarks,
		t.value('CreatedBy[1]','nvarchar(150)')as CreatedBy,
		t.value('CreatedDate[1]','nvarchar(150)')as CreatedDate

		into #TemptblMachinePreparation from
		@dsxmlu1.nodes('/dsMachinePreparation/tblDoffChilds
		
		')as temptable(t)



		SELECT 
		m.value('MachineChemicalConsumptionID[1]','nvarchar(200)')as MachineChemicalConsumptionID,
		m.value('MachineChemicalConsumptionDate[1]','nvarchar(200)')as MachineChemicalConsumptionDate,
		m.value('MachinePreparationID[1]','nvarchar(150)')as MachinePreparationID,
		m.value('ChemicalProductID[1]','nvarchar(150)')as ChemicalProductID,
		m.value('Qty[1]','nvarchar(150)')as Qty,
		m.value('Remarks[1]','nvarchar(150)')as Remarks,
		m.value('CreatedBy[1]','nvarchar(150)')as CreatedBy,
		m.value('CreatedDate[1]','nvarchar(150)')as CreatedDate

		into #TemptblMachinePreparation2 from
		@dsxmlu2.nodes('/dsMachinePreparation2/tblchemicalChilds
		
		')as temptable(m)




	--Main Part

    IF(@SaveOption = @Insert) -- 1 
    BEGIN  
	 
        INSERT INTO FIN_MachinePreparationMaster(Fabcode,MachineID,FinishTypeID,FinishRoute,MachinePreparationDate,Remarks,SendForApproval,CreatedBy, CreatedDate) 
                                   VALUES(@Fabcode,@MachineID,@FinishTypeID,@FinishRoute,@MachinePreparationDate,@Remarks,@SendForApproval,@USER_BY,@GetDateTime)
                
		SET @IdentityValue = @@IDENTITY

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 

		---Details
		INSERT INTO FIN_MachineDoffChilds
		      (MachinePreparationID,FinishingProcessMasterID,Remarks,CreatedBy,CreatedDate)
		Select @IdentityValue,FinishingProcessMasterID,Remarks,@USER_BY, @GetDateTime
		From #TemptblMachinePreparation
		Where MachineDoffID = 0 

		---Details 2

		INSERT INTO FIN_MachineChemicalConsumption
		      (MachinePreparationID,MachineChemicalConsumptionDate,ChemicalProductID,Qty,Remarks,CreatedBy,CreatedDate)
		Select @IdentityValue,MachineChemicalConsumptionDate,ChemicalProductID,Qty,Remarks,@USER_BY, @GetDateTime
		From #TemptblMachinePreparation2
		Where MachineChemicalConsumptionID = 0 

		   If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 

    END

    Else IF(@SaveOption = @Update) -- 2
    BEGIN
        Update FIN_MachinePreparationMaster 
		Set	Fabcode = @Fabcode,
		MachineID=@MachineID,
		FinishTypeID=@FinishTypeID,
		FinishRoute=@FinishRoute,
		MachinePreparationDate=@MachinePreparationDate,
		Remarks=@Remarks,
		UpdatedBy = @USER_BY,
		UpdatedDate = @GetDateTime,
		SendForApproval=@SendForApproval
        Where MachinePreparationID = @MachinePreparationID

        Set @IdentityValue = @MachinePreparationID

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End

		--Details Update
		Update FIN_MachineDoffChilds SET DELETED=1  From FIN_MachineDoffChilds Where NOT EXISTS
		(
			Select * From #TemptblMachinePreparation id
			Where FIN_MachineDoffChilds.MachineDoffID = id.MachineDoffID and FIN_MachineDoffChilds.MachinePreparationID=@IdentityValue
		)  and MachinePreparationID=@IdentityValue


		--Details Update 2
		Update FIN_MachineChemicalConsumption SET DELETED=1  From FIN_MachineChemicalConsumption Where NOT EXISTS
		(
			Select * From #TemptblMachinePreparation2 id
			Where FIN_MachineChemicalConsumption.MachineChemicalConsumptionID = id.MachineChemicalConsumptionID and FIN_MachineChemicalConsumption.MachinePreparationID=@IdentityValue
		)  and MachinePreparationID=@IdentityValue



		If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End

	
	    --Details Insert 1
		INSERT INTO dbo.FIN_MachineDoffChilds
		      (MachinePreparationID,FinishingProcessMasterID,Remarks,Remarks,CreatedBy,CreatedDate)
		Select  @IdentityValue,FinishingProcessMasterID,Remarks,Remarks,@USER_BY, @GetDateTime
		From #TemptblMachinePreparation
		Where MachineDoffID = 0 


		 --Details Insert 2
		INSERT INTO FIN_MachineChemicalConsumption
		      (MachinePreparationID,MachineChemicalConsumptionDate,ChemicalProductID,Qty,Remarks,CreatedBy,CreatedDate)
		Select @IdentityValue,MachineChemicalConsumptionDate,ChemicalProductID,Qty,Remarks,@USER_BY, @GetDateTime
		From #TemptblMachinePreparation2
		Where MachineChemicalConsumptionID = 0 



		   If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
		
		UPDATE dbo.FIN_MachineDoffChilds
		     SET 
			 MachinePreparationID=@IdentityValue,
			 FinishingProcessMasterID=T.FinishingProcessMasterID,
			 Remarks=T.Remarks,
			 Remarks=T.Remarks,
			 UpdatedBy=@USER_BY,
			 UpdatedDate=@GetDateTime

		From FIN_MachineDoffChilds D , #TemptblMachinePreparation T
		Where D.MachineDoffID = T.MachineDoffID AND T.MachineDoffID>0

		UPDATE dbo.FIN_MachineChemicalConsumption
		     SET 
			 MachinePreparationID=@IdentityValue,
			 MachineChemicalConsumptionDate=M.MachineChemicalConsumptionDate,
			 ChemicalProductID=M.ChemicalProductID,
			 Qty=M.Qty,
			 Remarks=M.Remarks,
			 UpdatedBy=@USER_BY,
			 UpdatedDate=@GetDateTime

		From FIN_MachineChemicalConsumption D , #TemptblMachinePreparation2 M
		Where D.MachineChemicalConsumptionID = M.MachineChemicalConsumptionID AND M.MachineChemicalConsumptionID>0

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
    END  

		--IF(@SaveOption = @Approve) -- 3
		--BEGIN 
		--	Update ACC_EXPORT_DOMASTER Set 
		--	Approved = 1,	
		--	APPROVED_BY = @USER_BY,
		--	APPROVED_DATE = @GetDateTime ,
		--	AUDITBY=@USER_BY,
		--	AUDITON=@GetDateTime,
		--	COMMENTS=@COMMENTS
		--	Where TRNSID = @TRNSID

		--	Set @IdentityValue = @TRNSID
		--	SET @DoNo1=@DONO

		--	If @@Error !=0
		--	Begin
		--		Rollback Transaction
		--		Set @ErrNo = -1
		--	End 
		--END

		--IF(@SaveOption = @Rejected) -- 5
		--BEGIN 
		--	Update ACC_EXPORT_DOMASTER Set 
		--	Approved = 0,	
		--	APPROVED_BY = @USER_BY,
		--	APPROVED_DATE = @GetDateTime ,
		--	AUDITBY=@USER_BY,
		--	AUDITON=@GetDateTime,
		--	COMMENTS=@COMMENTS,
		--	IS_CANCELLED=1,
		--	Reject=1,
		--	REJECT_BY=@USER_BY,
		--	REJECT_DATE=@GetDateTime,
		--	RejectReason=@COMMENTS
		--	Where TRNSID = @TRNSID

		--	Set @IdentityValue = @TRNSID
		--	SET @DoNo1=@DONO

		--	If @@Error !=0
		--	Begin
		--		Rollback Transaction
		--		Set @ErrNo = -1
		--	End 
		--END

		drop table #TemptblMachinePreparation
Commit Transaction


Select  DENSE_RANK() OVER (ORDER BY w.CardNo) SLNO,
	W.CardNo




/// Inspection

USE [PDLERP]
GO
/****** Object:  StoredProcedure [dbo].[spSet_SampleRequisition]    Script Date: 12/12/2022 3:18:49 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
 
Alter PROCEDURE [dbo].[spSet_InspectionDailyDataEntry](
	@dsxmlu1 xml = null,
    @SaveOption Int = null,
	@INSPID int = -1,
	@SETID int = -1,
	@ROLLNO varchar(100) = '',
	@ROLL_INSPDATE datetime=null, 
	@TROLLEYNO int = -1,
	@OPERATOR_ID int = -1,
	@MACHINE_ID int = -1,
	@PICES int = -1,
	@TOTAL_DEFECT int = -1,
	@CUT_PCS_SECTION int = -1,
	@PROCESS_TYPE int = -1,
	@DEFECT_NAME int = -1,
	@ROLL_ID int = -1,
	@TROLLY_STATUS bit=0,
	@IS_QC_APPROVE bit=0,
	@BATCH varchar(100)=null,
	@ACT_CONS varchar(100)=null,
	@SHIFT varchar(100)=null,
	@DEF_PCS varchar(100)=null,
	@REMARKSChilds varchar(100)=null,
	@OPT1 varchar(100)=null,
	@OPT2 varchar(100)=null,
	@OPT3 varchar(100)=null,
	@OPT4 varchar(100)=null,
	@OPT5 varchar(100)=null,
	@OPT6 varchar(100)=null,
	@OPT7 varchar(100)=null,
	@DEFECT_FAULT_STATUS varchar(100)=null,
    @USER_BY varchar(100) = '',
    @IdentityValue Int OutPut,
    @ErrNo int output
	--@SendForApproval  bit=0,
	--@Approved bit=0,
	--@Reject bit=0,
	--@RejectReason nvarchar(150) = ''
)
AS
Begin Transaction
        
    Declare @Insert Int = 1, @Update Int = 2, @Approve Int = 3, @Rejected Int = 4;
	Declare @GetDateTime DateTime = getdate(),@BakIdentity int=0;

    SET @IdentityValue = 0; Set @ErrNo = 0; 
	
		SELECT 
		t.value('DPID[1]','nvarchar(200)')as DPID,
		t.value('ROLL_ID[1]','nvarchar(200)')as ROLL_ID,
		t.value('DEF_TYPEID[1]','nvarchar(150)')as DEF_TYPEID,
		t.value('POINT1[1]','nvarchar(150)')as POINT1,
		t.value('POINT2[1]','nvarchar(150)')as POINT2,
		t.value('POINT3[1]','nvarchar(150)')as POINT3,
		t.value('POINT4[1]','nvarchar(150)')as POINT4,
		t.value('DELETED[1]','nvarchar(150)')as DELETED 

		into #TemptblDefectPoint from
		@dsxmlu1.nodes('/dsInspection/tblInspectionChilds')as temptable(t)

	--Main Part

    IF(@SaveOption = @Insert) -- 1 

	
    BEGIN

	    Select Top 1 @INSPID = INSPID from F_PR_INSPECTION_PROCESS_MASTER Where SETID = @SetID

		If @INSPID Is Null


		BEGIN
			
			INSERT INTO F_PR_INSPECTION_PROCESS_MASTER(SETID,INSPDATE,CreatedBy,CreatedDate)
												Values(@SETID,@GetDateTime,@USER_BY,@GetDateTime)
			SET @INSPID = @@IDENTITY
		END
		
        INSERT INTO F_PR_INSPECTION_PROCESS_DETAILS(INSPID, ROLLNO, ROLL_INSPDATE, TROLLEYNO, OPERATOR_ID, MACHINE_ID, PICES, TOTAL_DEFECT, CUT_PCS_SECTION,
		PROCESS_TYPE,DEFECT_NAME,ROLL_ID,TROLLY_STATUS,IS_QC_APPROVE,BATCH,ACT_CONS,SHIFT,DEF_PCS,REMARKSChilds,OPT1,OPT2,OPT3,OPT4,OPT5,OPT6,OPT7,DEFECT_FAULT_STATUS,
		CreatedBy,CreatedDate,UpdatedBy,UpdatedDate)
		VALUES(@INSPID, @ROLLNO, @ROLL_INSPDATE, @TROLLEYNO, @OPERATOR_ID, @MACHINE_ID, @PICES, @TOTAL_DEFECT, @CUT_PCS_SECTION,
		@PROCESS_TYPE,@DEFECT_NAME,@ROLL_ID,@TROLLY_STATUS,@IS_QC_APPROVE,@BATCH,@ACT_CONS,@SHIFT,@DEF_PCS,@REMARKSChilds,@OPT1,@OPT2,@OPT3,@OPT4,@OPT5,@OPT6,@OPT7,@DEFECT_FAULT_STATUS,
		@USER_BY,@GetDateTime,@USER_BY,@GetDateTime)
                
		SET @IdentityValue = @@IDENTITY

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End

		---Details
		INSERT INTO F_PR_INSPECTION_DEFECT_POINT (DPID, ROLL_ID, DEF_TYPEID, POINT1, POINT2, POINT3, POINT4,DELETED)
		Select @IdentityValue, ROLL_ID, DEF_TYPEID, POINT1, POINT2, POINT3, POINT4,DELETED
		From #TemptblDefectPoint
		Where (DPID = 0) 

		If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 

    END

    Else IF(@SaveOption = @Update) -- 2
    BEGIN
        Update F_PR_INSPECTION_PROCESS_DETAILS Set	
		 INSPID              =      @INSPID                  
		,ROLLNO 			=	   @ROLLNO 			
		,ROLL_INSPDATE      =      @ROLL_INSPDATE      
		,TROLLEYNO          =      @TROLLEYNO          
		,OPERATOR_ID        =      @OPERATOR_ID        
		,MACHINE_ID         =      @MACHINE_ID          
		,PICES              =      @PICES                
		,TOTAL_DEFECT		=	   @TOTAL_DEFECT		 
		,CUT_PCS_SECTION	=	   @CUT_PCS_SECTION		
		,PROCESS_TYPE		=	   @PROCESS_TYPE		
		,DEFECT_NAME		=	   @DEFECT_NAME		
		,TROLLY_STATUS		=	   @TROLLY_STATUS		
		,IS_QC_APPROVE		=	   @IS_QC_APPROVE		
		,BATCH				=	   @BATCH				
		,ACT_CONS			=	   @ACT_CONS			
		,SHIFT				=	   @SHIFT				
		,DEF_PCS			=	   @DEF_PCS			
		,REMARKSChilds		=	   @REMARKSChilds					
        Where ROLL_ID = @ROLL_ID

        Set @IdentityValue = @ROLL_ID

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End

		--Details Update
		Update F_PR_INSPECTION_DEFECT_POINT SET DELETED=1  From F_PR_INSPECTION_DEFECT_POINT Where NOT EXISTS
		(
			Select * From #TemptblDefectPoint id
			Where F_PR_INSPECTION_DEFECT_POINT.DPID = id.DPID 
			And F_PR_INSPECTION_DEFECT_POINT.DPID = @IdentityValue
		)  and ROLL_ID = @IdentityValue
		If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 

		INSERT INTO F_PR_INSPECTION_DEFECT_POINT (DPID, ROLL_ID, DEF_TYPEID, POINT1, POINT2, POINT3, POINT4,DELETED)
		Select @IdentityValue, ROLL_ID, DEF_TYPEID, POINT1, POINT2, POINT3, POINT4,DELETED
		From #TemptblDefectPoint
		Where DPID = 0

		   If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
		
		UPDATE dbo.F_PR_INSPECTION_DEFECT_POINT
		     SET 
			 ROLL_ID=@IdentityValue,
			 DEF_TYPEID=T.DEF_TYPEID,
			 POINT1=T.POINT1,
			 POINT2=T.POINT2,
			 POINT3=T.POINT3,
			 POINT4=T.POINT4
		From F_PR_INSPECTION_DEFECT_POINT D , #TemptblDefectPoint T
		Where D.DPID = T.DPID AND T.DPID > 0  

        If @@Error !=0
        Begin
            Rollback Transaction
            Set @ErrNo = -1
        End 
    END  

	drop table #TemptblDefectPoint
Commit Transaction



Select  ReceiveChildsID, BatchNo +' Stock '+ convert(varchar(50),Sum(Qty)) as BatchNo From
            (
		            Select B.ReceiveChildsID, B.BatchNo, sum(B.ReceiveQty)  As Qty 
		            FROM CS_ReceiveMaster D
		            Inner Join CS_ReceiveChilds B ON D.ReceiveMasterID = B.ReceiveMasterID
		            Inner join CS_RequirementChilds C on B.ProductID=C.ProductID
		            Inner Join CS_RequirementMaster F on C.RequirementMasterID=F.RequirementMasterID
		            Where D.Approved = 1 and F.RequirementMasterID={id}
		            group by B.ReceiveQty,B.BatchNo,B.ReceiveChildsID 
		
		            union All

		            Select C.ReceiveChildsID, G.BatchNo, -sum(C.IssueQty) As Qty
		            FROM CS_IssueMaster E
		            Inner Join CS_IssueChilds C ON E.IssueMasterID = C.IssueMasterID
		            Inner join CS_RequirementChilds D on D.ProductID=C.ProductID
		            Inner Join CS_RequirementMaster F on D.RequirementMasterID=F.RequirementMasterID
		            inner join CS_ReceiveChilds G on G.ReceiveChildsID=C.ReceiveChildsID
		            Where E.Approved = 1 And F.RequirementMasterID={id}

		            group by C.IssueQty,C.ReceiveChildsID,G.BatchNo

            )Result

            group by  BatchNo,ReceiveChildsID";
